---
import BlockRendererInner from './BlockRenderer.astro';
import { getBlockStyling } from '@wp-block-tools/styles';
import type { Block } from '@wp-block-tools/styles';
import { Image } from "astro:assets";

type Props = {
    blocks: Block[];
}
const {blocks} = Astro.props
console.log("BLOCKS FROM BLOCK RENDERED COMPONENT", blocks)
---
{blocks.map(block => {
    const {styles, classes} = getBlockStyling(block);
    switch (block.name) {
        case "core/paragraph":
            return <p class={classes} style={styles} set:html={block.attributes?.content}></p>
        case "core/columns":
        case "core/column":
        case "core/post-content":
        case "core/group":
        return (<div class={classes} style={styles}>
                    <BlockRendererInner blocks={block.innerBlocks || []} />
                </div>)
        case "core/site-logo":
        return (
          <div class={classes} style={styles}>
            <Image
              height={block.attributes?.width || "50"}
              width={block.attributes?.width || "50"}
              src={block.attributes?.url || ""}
              alt="Site logo"
            />
          </div>
        );
        case "core/template-part":
            return <BlockRendererInner blocks={block.innerBlocks || []} />
        default:
        return null;
    }
})}